services:
  app-prod:
    build:
      context: ./app
      dockerfile: prod.Dockerfile
      args:
        TELEGRAM_BOT_TOKEN_FILE: /run/secrets/tg_bot_token
        TELEGRAM_ORDERS_CHAT_ID_FILE: /run/secrets/tg_orders_chat_id
    container_name: app-prod
    restart: unless-stopped
    ports:
      - "5173:5173"
    expose:
      - "5173"
    networks:
      - caddy
    working_dir: /app
    depends_on:
      - pocketbase
    volumes:
      - /app/node_modules
      - /app/build
      - ./app:/app
    environment:
      TELEGRAM_BOT_TOKEN_FILE: /run/secrets/tg_bot_token
      TELEGRAM_ORDERS_CHAT_ID_FILE: /run/secrets/tg_orders_chat_id
    secrets:
      - tg_bot_token
      - tg_orders_chat_id
    labels:
      caddy: app.652store.ru
      caddy.reverse_proxy: "{{upstreams 5173}}"

  # Pocketbase - sqlite, auth, api, admin ui
  pocketbase:
    build:
      context: ./pb
    container_name: pocketbase
    working_dir: /pb
    restart: unless-stopped
    ports:
      - "8090:8090"
    expose:
      - "8090"
    networks:
      - caddy
    volumes:
      - ./pb/pb_data:/pb/pb_data
    labels:
      caddy: api.652store.ru
      caddy.reverse_proxy: "{{upstreams 8090}}"

  # Caddy - proxy server router for containers
  caddy:  
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    container_name: caddy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/caddy/data:/data
    restart: unless-stopped
    environment:
      - CADDY_INGRESS_NETWORKS=caddy
    networks:
      - caddy

secrets:
  tg_bot_token:
    file: ./secrets/tg_bot_token.txt
  tg_orders_chat_id:
    file: ./secrets/tg_orders_chat_id.txt

networks:
  caddy:
    external: true
